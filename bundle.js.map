{"version":3,"sources":["webpack:///webpack/bootstrap 3df8e20ca21517a0c299","webpack:///./lib/corgi_runner.js","webpack:///./lib/player.js","webpack:///./lib/game.js","webpack:///./lib/background.js","webpack:///./lib/tree.js","webpack:///./lib/obstacles.js","webpack:///./lib/bird.js","webpack:///./lib/score.js","webpack:///./lib/util.js","webpack:///./lib/game_over.js","webpack:///./lib/menu.js","webpack:///./lib/difficulty.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC;;;;;;;ACtBD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;AC/HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+BAA8B,wBAAwB;AACtD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,iDAAiD;AAC5E,MAAK;AACL,4BAA2B,kCAAkC;AAC7D;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;AClPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;;;;;;AC7BA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;ACzCA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AChEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA2B,WAAW;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,aAAa,6BAA6B,oCAAoC;AACzG;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA,oBAAmB,iCAAiC;AACpD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,2CAA0C,EAAE;AAC5C,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,qBAAoB;AACpB;AACA,wDAAuD;AACvD,IAAG;AACH;AACA;AACA,wCAAuC;AACvC,mBAAkB,cAAc;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACbA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;;;;;;;AC7GA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"./bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3df8e20ca21517a0c299","const Player = require('./player.js');\nconst Game = require('./game.js');\n\ndocument.addEventListener('DOMContentLoaded', ()=> {\n  const gameCanvas = document.getElementById('game-canvas');\n  const canvasContext = gameCanvas.getContext('2d');\n\n  const backgroundCanvas = document.getElementById('background-canvas');\n  const backgroundCanvasContext = backgroundCanvas.getContext('2d');\n\n  const foregroundCanvas = document.getElementById('foreground-canvas');\n  const foregroundCanvasContext = foregroundCanvas.getContext('2d');\n\n  const game = new Game(\n    canvasContext,\n    gameCanvas,\n    backgroundCanvasContext,\n    foregroundCanvasContext\n  );\n\n  game.openMenu();\n\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/corgi_runner.js\n// module id = 0\n// module chunks = 0","const SPRITES = {\n  walk1: [15, 11, 48, 64],\n  walk2: [187, 9, 34, 66],\n  walk3: [227, 11, 56, 64],\n  jump: [133, 11, 48, 64],\n  gameOver: [345, 77, 34, 76],\n};\n\nconst PLAYER_HITBOX_OFFSET = {\n  posX: 3,\n  posY: 9,\n  sizeX: 27,\n  sizeY: 50,\n};\n\nclass Player {\n\n  constructor(options) {\n    this.position = options.position;\n    this.walkspeed = options.walkspeed ? options.walkspeed : 1;\n    this.falling = false;\n    this.jumping = false;\n    this.jumpCount = 0;\n    this.spriteSheet = new Image();\n    this.spriteSheet.src = './assets/images/player-sprites.png';\n    this.walkCycle = 0;\n    this.gameOver = false;\n    this.jumpSound = new Audio('./assets/sounds/jump.wav');\n    this.jumpSound.volume = 0.3;\n  }\n\n  jump() {\n    const gravity = 0.40;\n    const initialSpeed = 12;\n    if (this.jumping) {\n      if (this.jumpCount === 0 || !this.onGround()){\n        this.position[1] -= initialSpeed - gravity * this.jumpCount;\n        this.jumpCount += 1;\n      } else {\n        this.position[1] = 210;\n        this.jumpCount = 0;\n        this.jumping = false;\n      }\n    }\n  }\n\n  onGround() {\n    return this.position[0] === 100 && this.position[1] >= 210;\n  }\n\n  toggleJump() {\n    this.jumping = true;\n    if (this.onGround())\n      this.jumpSound.play();\n  }\n\n  getSprite() {\n    if (this.gameOver) {\n      return SPRITES.gameOver;\n    } else if (!this.onGround()) {\n      return SPRITES.jump;\n    } else if (this.walkCycle < 10) {\n      this.walkCycle += 1;\n      return SPRITES.walk1;\n    } else if (this.walkCycle < 20) {\n      this.walkCycle += 1;\n      return SPRITES.walk2;\n    } else if (this.walkCycle < 30) {\n      this.walkCycle +=1;\n      return SPRITES.walk3;\n    } else if (this.walkCycle < 39) {\n      this.walkCycle +=1;\n      return SPRITES.walk2;\n    } else {\n      this.walkCycle = 0;\n      return SPRITES.walk2;\n    }\n  }\n\n  draw(ctx) {\n    ctx.clearRect(0, 0, 800, 300);\n    const sprite = this.getSprite();\n    ctx.drawImage(\n      this.spriteSheet,\n      sprite[0],\n      sprite[1],\n      sprite[2],\n      sprite[3],\n      this.position[0],\n      this.position[1],\n      sprite[2],\n      sprite[3]\n    );\n    // ctx.beginPath();\n    // ctx.rect(this.position[0] + 3, this.position[1] + 9, 27, 50);\n    // ctx.lineWidth = 1;\n    // ctx.strokeStyle = 'yellow';\n    // ctx.stroke();\n  }\n\n  update(ctx) {\n    this.jump();\n    this.draw(ctx);\n  }\n\n  collidedWith(obstacle) {\n    const playerHitbox = this.hitbox();\n    const obstacleHitbox = obstacle.hitbox();\n    return !(\n      playerHitbox.maxX < obstacleHitbox.minX ||\n      playerHitbox.minX > obstacleHitbox.maxX ||\n      playerHitbox.maxY < obstacleHitbox.minY ||\n      playerHitbox.minY > obstacleHitbox.maxY\n    );\n  }\n\n  hitbox() {\n    return {\n      minX: this.position[0] + PLAYER_HITBOX_OFFSET.posX,\n      maxX: this.position[0] + PLAYER_HITBOX_OFFSET.posX + PLAYER_HITBOX_OFFSET.sizeX,\n      minY: this.position[1] + PLAYER_HITBOX_OFFSET.posY,\n      maxY: this.position[1] + PLAYER_HITBOX_OFFSET.posY + PLAYER_HITBOX_OFFSET.sizeY,\n    };\n  }\n\n}\n\nmodule.exports = Player;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/player.js\n// module id = 1\n// module chunks = 0","const Player = require('./player');\nconst Background = require('./background');\nconst Tree = require('./tree');\nconst Bird = require('./bird');\nconst Score = require('./score');\nconst Util = require('./util');\nconst drawGameOver = require('./game_over');\nconst Menu = require('./menu');\nconst Difficulty = require('./difficulty');\n\nconst HARD = {\n birds: true,\n multiplier: 7,\n maxTrees: 3,\n maxObstacles: 8,\n};\n\nconst MEDIUM = {\n  birds: false,\n  multiplier: 3,\n  maxTrees: 3,\n  maxObstacles: 7,\n};\n\nconst EASY ={\n  birds: false,\n  multiplier: 1,\n  maxTrees: 1,\n  maxObstacles: 6,\n};\n\nclass Game {\n  constructor(ctx, gameCanvas, backgroundCtx, foregroundCtx) {\n    this.ctx = ctx;\n    this.gameCanvas = gameCanvas;\n    this.player = new Player({ position: [100 , 210] });\n    this.obstacleInterval = 0;\n    this.spawnRate = 60;\n    this.nextSpawn = this.spawnRate + Util.getRandomIntInclusive(0, 25);\n    this.obstacles = [];\n    this.score = new Score(1);\n    this.muteMusic = false;\n\n    this.jump = this.jump.bind(this);\n    this.draw = this.draw.bind(this);\n    this.resetGame = this.resetGame.bind(this);\n\n    this.highScoreInput = document.getElementsByClassName(\"high-score-form\")[0];\n\n    this.createBackground(backgroundCtx, foregroundCtx);\n    this.setSounds();\n    this.setButtonListeners();\n\n    Menu.setMenuButtons(this);\n  }\n\n  jump(event) {\n    if (event.code === 'Space' && this.gamePlaying && !this.gameOver) {\n      event.preventDefault();\n      if (!this.gameOver)\n        this.player.toggleJump();\n    }\n  }\n\n  openMenu() {\n    this.score.setScore();\n    if (!this.muteMusic) {\n      this.menuMusic.volume = 0.7;\n      this.menuMusic.play();\n    }\n  }\n\n  toggleMute() {\n    if (this.muteMusic) {\n      this.muteMusic = false;\n      if (this.gamePlaying) this.backgroundMusic.play();\n      else this.menuMusic.play();\n    } else {\n      this.muteMusic = true;\n      this.backgroundMusic.pause();\n      this.menuMusic.pause();\n    }\n    return this.muteMusic;\n  }\n\n  setButtonListeners() {\n    this.gameCanvas.addEventListener('keydown', this.jump);\n    this.gameCanvas.addEventListener('keydown', this.resetGame);\n  }\n\n  setSounds() {\n    this.bark = new Audio('./assets/sounds/bork.wav');\n    this.gameOverSound = new Audio('./assets/sounds/sad.wav');\n    this.backgroundMusic = new Audio('./assets/sounds/background-music.mp3');\n    this.backgroundMusic.loop = true;\n    this.menuMusic = new Audio('./assets/sounds/menu-music.mp3');\n    this.menuMusic.loop = true;\n\n  }\n\n  pause() {\n    this.paused = true;\n  }\n\n  unpause() {\n    this.paused =false;\n    if (this.gamePlaying) {\n      this.draw();\n    }\n  }\n\n  createObstacles() {\n    if (this.obstacleInterval === 0 && this.obstacles.length < this.maxObstacles) {\n      if (Math.random() < 0.8 && this.trees < this.maxTrees - 1) {\n        this.nextSpawn = 8;\n        this.trees += 1;\n        this.obstacles.push(this.generateObstacle(true));\n      } else {\n        this.trees = 0;\n        this.obstacles.push(this.generateObstacle());\n      }\n      this.obstacleInterval += 1;\n    } else if(this.obstacleInterval === this.nextSpawn) {\n      this.obstacleInterval = 0;\n      this.nextSpawn = this.spawnRate + Util.getRandomIntInclusive(0, 25);\n    } else {\n      this.obstacleInterval += 1;\n    }\n  }\n\n  generateObstacle(tree = false) {\n    let obstacle = null;\n    if (!this.birds || tree || Math.random() < 0.5) {\n      let sprite = 'light';\n      if (Math.random() > 0.5) {\n        sprite = 'dark';\n      }\n      obstacle = new Tree({ startPos: [820, 140], speed: 6, sprite: sprite });\n    } else {\n      obstacle = new Bird({ startPos: [820, 49], speed: 7.8 });\n    }\n    return obstacle;\n  }\n\n  createBackground(backgroundCtx, foregroundCtx) {\n    const backgroundImage = new Image();\n    backgroundImage.src = './assets/images/scrolling-background.jpg';\n    this.background = new Background(backgroundCtx, backgroundImage, -35, 1422, 0.8);\n\n    const foregroundImage = new Image();\n    foregroundImage.src = './assets/images/foreground-grass.png';\n    this.foreground = new Background(foregroundCtx, foregroundImage, 250, 720, 6);\n  }\n\n  start(difficulty) {\n    document.getElementById('game-canvas').focus();\n    this.difficulty = difficulty;\n    this.menuMusic.pause();\n    this.menuMusic.currentTime = 0;\n    if (!this.muteMusic) this.backgroundMusic.play();\n    this.gamePlaying = true;\n    this.gameOver = false;\n    this.canReset = false;\n    this.paused = false;\n    const corgi = document.getElementsByClassName(\"corgi\")[0];\n    this.highScoreInput.className = 'high-score-form close';\n    corgi.className = 'corgi';\n    document.getElementById('game-over-menu').className = 'game-over';\n    this.trees = 0;\n    this.score.score = 0;\n    this.player.position = [100, 210];\n    this.obstacles = [];\n    const diffOptions = Difficulty[difficulty];\n    this.birds = diffOptions.birds;\n    this.score.multiplier = diffOptions.multiplier;\n    this.maxTrees = diffOptions.maxTrees;\n    this.maxObstacles = diffOptions.maxObstacles;\n    this.draw();\n  }\n\n  setScore(name) {\n    const scoreIdx = this.score.checkHighScore();\n    this.score.updateLocalHighScore(scoreIdx, name);\n    this.score.setScore();\n  }\n\n  stopGame() {\n    const corgi = document.getElementsByClassName(\"corgi\")[0];\n    const highScore = this.score.checkHighScore();\n    if(highScore > -1) {\n      this.highScoreInput.className='high-score-form';\n    }\n    this.backgroundMusic.pause();\n    this.gameOverSound.volume = 0.9;\n    this.gameOverSound.play();\n    setTimeout(() => {\n      corgi.className += ' run-away';\n      this.bark.volume = 0.9;\n      this.bark.play();\n      drawGameOver(this.ctx);\n    }, 700);\n    setTimeout(() => {\n      this.bark.volume = 0.6;\n      this.bark.play();\n      this.canReset = true;\n    }, 1400);\n    this.gameOver = true;\n  }\n\n  resetGame(e) {\n    if(e.key === 'r' && this.canReset && !this.paused) {\n      e.preventDefault();\n      this.start(this.difficulty);\n    }\n  }\n\n  draw() {\n    if (!this.gameOver && !this.paused) {\n      requestAnimationFrame(this.draw);\n      this.player.update(this.ctx);\n      this.createObstacles();\n      let deleteIdx = null;\n      this.obstacles.forEach((obstacle, idx) => {\n        obstacle.step(this.ctx);\n        if (obstacle.outOfBounds()){\n          deleteIdx = idx;\n        }\n        if (this.player.collidedWith(obstacle)) {\n          this.stopGame();\n        }\n      });\n      if(deleteIdx !== null){\n        this.obstacles.splice(deleteIdx, 1);\n      }\n      this.score.draw(this.ctx);\n      this.background.draw();\n      this.foreground.draw();\n    }\n  }\n\n}\n\nmodule.exports = Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 2\n// module chunks = 0","class Background {\n  constructor(ctx, image, posY, imageLength, speed) {\n    this.image = image;\n    this.speed = speed;\n    this.x = 0;\n    this.y = posY;\n    this.imageLength = imageLength;\n    this.ctx = ctx;\n  }\n\n  draw() {\n    this.ctx.clearRect(0, 0, 800, 300);\n    this.ctx.drawImage(this.image, this.x, this.y);\n    this.ctx.drawImage(this.image, this.x + this.imageLength, this.y);\n    if (this.imageLength < 800){\n      this.ctx.drawImage(this.image, this.x + this.imageLength * 2, this.y);\n    }\n    if (this.x <= -this.imageLength) {\n      this.x = 0;\n    }\n    this.scrollImage();\n  }\n\n  scrollImage() {\n    this.x -= this.speed;\n  }\n\n}\n\nmodule.exports = Background;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/background.js\n// module id = 3\n// module chunks = 0","const Obstacle = require('./obstacles');\n\nconst TREE_SPRITES = {\n  lightTree: [12, 24, 146, 186],\n  darkTree: [176, 24, 146, 186],\n};\n\nconst TREE_HITBOX_OFFSET = {\n  posX: 24,\n  posY: 20,\n  sizeX: 62,\n  sizeY: 120,\n};\n\nclass Tree extends Obstacle {\n  constructor(options) {\n    options.hitboxOffset = TREE_HITBOX_OFFSET;\n    super(options);\n    this.sprite = options.sprite;\n    this.spriteSheet = new Image();\n    this.spriteSheet.src = './assets/images/tree-sprites.png';\n  }\n\n  getSprite() {\n    if (this.sprite === 'light') {\n      return TREE_SPRITES.lightTree;\n    } else {\n      return TREE_SPRITES.darkTree;\n    }\n  }\n\n  draw(ctx) {\n    const sprite = this.getSprite();\n    ctx.drawImage(\n      this.spriteSheet,\n      sprite[0],\n      sprite[1],\n      sprite[2],\n      sprite[3],\n      this.position[0],\n      this.position[1],\n      109,\n      139\n    );\n    // ctx.beginPath();\n    // ctx.rect(this.position[0] + 24, this.position[1] + 20, 62, 120);\n    // ctx.lineWidth = 1;\n    // ctx.strokeStyle = 'yellow';\n    // ctx.stroke();\n  }\n}\n\nmodule.exports = Tree;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/tree.js\n// module id = 4\n// module chunks = 0","class Obstacle {\n  constructor(options) {\n    this.position = options.startPos;\n    this.speed = options.speed;\n    this.hitboxOffset = options.hitboxOffset;\n  }\n\n  draw(ctx) {\n    ctx.beginPath();\n    ctx.rect(this.position[0], this.position[1], 10, 50);\n    ctx.fillStyle = 'black';\n    ctx.fill();\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = 'yellow';\n    ctx.stroke();\n  }\n\n  move() {\n    this.position[0] -= this.speed;\n  }\n\n  step(ctx) {\n    this.draw(ctx);\n    this.move();\n  }\n\n  outOfBounds() {\n    return this.position[0] < -150;\n  }\n\n  hitbox() {\n    return {\n      minX: this.position[0] + this.hitboxOffset.posX,\n      maxX: this.position[0] + this.hitboxOffset.posX + this.hitboxOffset.sizeX,\n      minY: this.position[1] + this.hitboxOffset.posY,\n      maxY: this.position[1] + this.hitboxOffset.posY + this.hitboxOffset.sizeY,\n    };\n  }\n\n}\n\nmodule.exports = Obstacle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/obstacles.js\n// module id = 5\n// module chunks = 0","const Obstacle = require('./obstacles');\n\nconst BIRD_SPRITES = {\n  flying1: [4, 4, 59, 49],\n  flying2: [65, 16, 57, 38],\n  flying3: [124, 15, 65, 39]\n};\n\nconst TREE_HITBOX_OFFSET = {\n  posX: 3,\n  posY: 16,\n  sizeX: 52,\n  sizeY: 15,\n};\n\nclass Bird extends Obstacle {\n  constructor(options) {\n    options.hitboxOffset = TREE_HITBOX_OFFSET;\n    super(options);\n    this.spriteSheet = new Image();\n    this.spriteSheet.src = './assets/images/bird-sprites.png';\n    this.flyCycle = 0;\n  }\n\n  getSprite() {\n    if (this.flyCycle < 8) {\n      this.flyCycle += 1;\n      return BIRD_SPRITES.flying1;\n    } else if (this.flyCycle < 14) {\n      this.flyCycle += 1;\n      return BIRD_SPRITES.flying2;\n    } else if (this.flyCycle < 25) {\n      this.flyCycle +=1;\n      return BIRD_SPRITES.flying3;\n    } else if (this.flyCycle < 30) {\n      this.flyCycle +=1;\n      return BIRD_SPRITES.flying2;\n    } else {\n      this.flyCycle = 0;\n      return BIRD_SPRITES.flying2;\n    }\n  }\n\n  draw(ctx) {\n    const sprite = this.getSprite();\n    ctx.drawImage(\n      this.spriteSheet,\n      sprite[0],\n      sprite[1],\n      sprite[2],\n      sprite[3],\n      this.position[0],\n      this.position[1],\n      sprite[2],\n      sprite[3]\n    );\n    // ctx.beginPath();\n    // ctx.rect(this.position[0] + 3, this.position[1] + 20, 52, 15);\n    // ctx.lineWidth = 1;\n    // ctx.strokeStyle = 'yellow';\n    // ctx.stroke();\n  }\n}\n\nmodule.exports = Bird;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/bird.js\n// module id = 6\n// module chunks = 0","const Util = require('./util');\n\nclass Score {\n  constructor(multiplier) {\n    this.score = 0;\n    this.multiplier = multiplier;\n    const scoreCookie = Util.readCookie('localHighScores');\n    if (scoreCookie) {\n      this.localHighScores = JSON.parse(scoreCookie);\n    } else {\n      this.localHighScores = [\n        [ 'dio', 15000 ],\n        [ 'dio', 12000 ],\n        [ 'dio', 8000 ],\n        [ 'dio', 4000 ],\n        [ 'dio', 1000 ]\n      ];\n    }\n  }\n\n  draw(ctx) {\n    const text = `Score: ${this.score}`;\n    ctx.font = '30px VT323';\n    ctx.strokeStyle = 'black';\n    ctx.lineWidth = 4;\n    ctx.fillStyle = 'white';\n    ctx.textAlign = 'left';\n    ctx.strokeText(text, 640, 40);\n    ctx.fillText(text, 640, 40);\n    this.increaseScore();\n  }\n\n  increaseScore() {\n    this.score += this.multiplier;\n  }\n\n  setScore() {\n    const scoreboard = document.getElementById('local-high-scores');\n    while (scoreboard.firstChild) {\n      scoreboard.removeChild(scoreboard.firstChild);\n    }\n    this.localHighScores.forEach((highScore)=> {\n      const score = document.createElement('li');\n      score.innerHTML = `${highScore[0]} <span class=\"right-score\">${Util.numberWithCommas(highScore[1])}</span>`;\n      scoreboard.appendChild(score);\n    });\n    const jsonScores = JSON.stringify(this.localHighScores);\n    Util.createCookie('localHighScores', jsonScores);\n  }\n\n  checkHighScore() {\n    for (let i = 0; i < this.localHighScores.length; i++) {\n      if (this.score > this.localHighScores[i][1]) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  updateLocalHighScore(idx, name) {\n    this.localHighScores[idx][0] = name;\n    this.localHighScores[idx][1] = this.score;\n  }\n\n}\n\nmodule.exports = Score;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/score.js\n// module id = 7\n// module chunks = 0","const Util = {\n  getRandomIntInclusive(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  },\n  numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  },\n  createCookie(name, value, days) {\n    let expires = \"\";\n    if (days) {\n        const date = new Date();\n        date.setTime(date.getTime() + (days*24*60*60*1000));\n        expires = \"; expires=\" + date.toUTCString();\n    }\n    document.cookie = name + \"=\" + value + expires + \"; path=/\";\n  },\n  readCookie(name) {\n    const nameEQ = name + \"=\";\n    const ca = document.cookie.split(';');\n    for(let i = 0;i < ca.length;i++) {\n        const c = ca[i];\n        while (c.charAt(0) === ' ') c = c.substring(1,c.length);\n        if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length,c.length);\n    }\n    return null;\n  }\n};\n\nmodule.exports = Util;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/util.js\n// module id = 8\n// module chunks = 0","const drawGameOver = (ctx) => {\n  const text1 = 'GAME OVER';\n  const text2 = 'Press \\'r\\' to reset the game';\n  ctx.font = '48px VT323';\n  ctx.fillStyle = '#fef86c';\n  ctx.textAlign = 'center';\n  ctx.strokeText(text1, 400, 150);\n  ctx.fillText(text1, 400, 150);\n  ctx.font = '32px VT323';\n  ctx.strokeText(text2, 400, 180);\n  ctx.fillText(text2, 400, 180);\n};\n\nmodule.exports = drawGameOver;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game_over.js\n// module id = 9\n// module chunks = 0","const closeMainMenu = () => {\n  const mainMenu = document.getElementsByClassName('main-menu')[0];\n  mainMenu.className = 'main-menu close';\n};\n\nconst openMainMenu = () => {\n  const mainMenu = document.getElementsByClassName('main-menu')[0];\n  mainMenu.className = 'main-menu';\n};\n\n\nconst Menu = {\n  setMenuButtons(game) {\n    const easyButton = document.getElementById('easy-button');\n    const mediumButton = document.getElementById('medium-button');\n    const hardButton = document.getElementById('hard-button');\n    const aboutButton = document.getElementById('how-to-play-button');\n    const closeAboutButton = document.getElementById('close-how-to-play');\n    const menuButton = document.getElementById('menu-button');\n    const submitHighScoreButton = document.getElementById('submit-highscore');\n    const muteButton = document.getElementById('mute-button');\n    const selectSound = new Audio('./assets/sounds/select.wav');\n\n    const openAbout = (e) => {\n      const aboutScreen = document.getElementsByClassName('how-to-play-container')[0];\n      if (aboutScreen.className.indexOf('how-to-play-open') !== -1) {\n        aboutScreen.className = 'how-to-play-container group';\n        playSelectSound();\n        game.unpause();\n      } else {\n        aboutScreen.className += ' how-to-play-open';\n        playSelectSound();\n        game.pause();\n      }\n    };\n\n    const playSelectSound = () => {\n      selectSound.pause();\n      selectSound.currentTime = 0;\n      selectSound.play();\n    };\n\n    const backToMenu = () => {\n      game.gameOver = true;\n      game.gamePlaying = false;\n      game.backgroundMusic.pause();\n      game.backgroundMusic.currentTime = 0;\n      playSelectSound();\n      game.openMenu();\n      document.getElementById('game-over-menu').className += ' close';\n      openMainMenu();\n      game.ctx.clearRect(0, 0, 800, 300);\n      document.getElementById('game-canvas').focus();\n    };\n\n    const submitScore = (e) => {\n      e.preventDefault();\n      const nameInput = document.getElementById('name-input');\n      game.setScore(nameInput.value);\n      nameInput.value = '';\n      game.highScoreInput.className += ' close';\n      playSelectSound();\n      document.getElementById('game-canvas').focus();\n    };\n\n    const muteToggle = (e) => {\n      if (game.toggleMute()) {\n        muteButton.className = 'toggled';\n      } else {\n        muteButton.className = '';\n      }\n      playSelectSound();\n      document.getElementById('game-canvas').focus();\n    };\n\n    game.gameCanvas.addEventListener('keydown', (e)=> {\n      if (e.code === 'Escape' && game.gamePlaying) {\n        e.preventDefault();\n        backToMenu();\n      }\n    });\n    muteButton.addEventListener('click', muteToggle);\n    menuButton.addEventListener('click', backToMenu);\n    aboutButton.addEventListener('click', openAbout);\n    closeAboutButton.addEventListener('click', openAbout);\n    submitHighScoreButton.addEventListener('click', submitScore);\n    hardButton.addEventListener('click', (e) => {\n        closeMainMenu();\n        playSelectSound();\n        setTimeout(()=> game.start('hard'), 200);\n      }\n    );\n    mediumButton.addEventListener('click', (e) => {\n        closeMainMenu();\n        playSelectSound();\n        setTimeout(()=> game.start('medium'), 200);\n      }\n    );\n    easyButton.addEventListener('click', (e) => {\n        closeMainMenu();\n        playSelectSound();\n        setTimeout(()=> game.start('easy'), 200);\n      }\n    );\n  },\n  closeMainMenu: closeMainMenu,\n  openMainMenu: openMainMenu,\n};\n\nmodule.exports = Menu;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/menu.js\n// module id = 10\n// module chunks = 0","const Difficulty = {\n  'hard': {\n    birds: true,\n    multiplier: 7,\n    maxTrees: 3,\n    maxObstacles: 10,\n  },\n  'medium': {\n    birds: false,\n    multiplier: 3,\n    maxTrees: 3,\n    maxObstacles: 7,\n  },\n  'easy': {\n    birds: false,\n    multiplier: 1,\n    maxTrees: 1,\n    maxObstacles: 6,\n  }\n};\n\nmodule.exports = Difficulty;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/difficulty.js\n// module id = 11\n// module chunks = 0"],"sourceRoot":""}